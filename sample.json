{
	"info": {
		"_postman_id": "ff943a67-7bdf-49da-a6b8-42a7b1731b20",
		"name": "Kamao",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "12805757",
		"_collection_link": "https://hifoods-team.postman.co/workspace/JS-chat-workspace~c54857cf-44ef-463a-8b27-2f4516dfbcd1/collection/12805757-ff943a67-7bdf-49da-a6b8-42a7b1731b20?action=share&creator=12805757&source=collection_link"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Status code is 200 [ MOSTLY FAILS ]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    //only for signup users\r",
									"});\r",
									"\r",
									"pm.test(\"User name passed\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"});\r",
									"pm.test(\"Phone no is passed\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "profile_picture",
									"description": "provide profile pictyre as a file",
									"type": "file",
									"src": []
								},
								{
									"key": "email",
									"value": "testuser2@gmail.com",
									"description": "unique",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Test User Part2",
									"type": "text"
								},
								{
									"key": "bio",
									"value": "Biology",
									"description": "Bio",
									"type": "text"
								},
								{
									"key": "password1",
									"value": "test12345",
									"description": "password",
									"type": "text"
								},
								{
									"key": "password2",
									"value": "test12345",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "+977 123456789",
									"description": "unique",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/user/signup"
					},
					"response": [
						{
							"name": "User Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profile_picture",
											"description": "provide profile pictyre as a file",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Pictures/71SnRYHv-CL._AC_SY450_.jpg"
										},
										{
											"key": "email",
											"value": "testuser@gmail.com",
											"description": "unique",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Test User",
											"type": "text"
										},
										{
											"key": "bio",
											"value": "Biology",
											"description": "Bio",
											"type": "text"
										},
										{
											"key": "password1",
											"value": "test12345",
											"description": "password",
											"type": "text"
										},
										{
											"key": "password2",
											"value": "test12345",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "123456789",
											"description": "unique",
											"type": "text"
										}
									]
								},
								"url": "localhost:3000/user/signup"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "295"
								},
								{
									"key": "ETag",
									"value": "W/\"127-Mi5t6apk+k361vlEabpDeahVFS4\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:51:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_admin\": false,\n    \"_id\": \"6072d4cb73d73e2064cb4c92\",\n    \"email\": \"testuser@gmail.com\",\n    \"name\": \"Test User\",\n    \"bio\": \"Biology\",\n    \"phone\": \"123456789\",\n    \"password\": \"$2b$10$q/MPDd2tpFk5Zygc3fqIxeem1vBkVV9b7jHhq00XKB.HzJefLB4b6\",\n    \"profile_picture\": \"\\\\public\\\\pp\\\\1618138304860 -- 71SnRYHv-CL._AC_SY450_.jpg\",\n    \"__v\": 0\n}"
						},
						{
							"name": "Error in use creation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profile_picture",
											"description": "provide profile pictyre as a file",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Pictures/71SnRYHv-CL._AC_SY450_.jpg"
										},
										{
											"key": "email",
											"value": "testuser@gmail.com",
											"description": "unique",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Test User",
											"type": "text"
										},
										{
											"key": "bio",
											"value": "Biology",
											"description": "Bio",
											"type": "text"
										},
										{
											"key": "password1",
											"value": "test12345",
											"description": "password",
											"type": "text"
										},
										{
											"key": "password2",
											"value": "test12345",
											"type": "text"
										},
										{
											"key": "phone",
											"value": "123456789",
											"description": "unique",
											"type": "text"
										}
									]
								},
								"url": "localhost:3000/user/signup"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "248"
								},
								{
									"key": "ETag",
									"value": "W/\"f8-vyFTPBV4EdGt7qXFwr4HMZa9ILY\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:52:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"msg\": \"Invalid value(s)\",\n            \"param\": \"_error\",\n            \"nestedErrors\": [\n                {\n                    \"value\": \"testuser@gmail.com\",\n                    \"msg\": \"Email already used\",\n                    \"param\": \"email\",\n                    \"location\": \"body\"\n                },\n                {\n                    \"value\": \"123456789\",\n                    \"msg\": \"Phone already used\",\n                    \"param\": \"phone\",\n                    \"location\": \"body\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Email field is there\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Phone field is there\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "profile_picture",
									"type": "file",
									"src": "/C:/Users/alphawolfnirjal/Downloads/608903eb190fa608902390e2 (4).jpg",
									"disabled": true
								},
								{
									"key": "bio",
									"value": "I am white lartern. Green latern is fake. White rocks",
									"type": "text"
								},
								{
									"key": "name",
									"value": "TeSt UsEr 12",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/user/update"
					},
					"response": [
						{
							"name": "Token user not foun",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{JWT}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profile_picture",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Pictures/Camera Roll/WIN_20200915_16_05_42_Pro.jpg"
										},
										{
											"key": "is_admin",
											"value": "true",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/user/update"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "ETag",
									"value": "W/\"28-QiyClkJvdD37yHHK/W0MkrUbuc0\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:56:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"User by this token not found\"\n}"
						},
						{
							"name": "Successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZDRjYjczZDczZTIwNjRjYjRjOTIiLCJpYXQiOjE2MTgxMzg0MzUsImV4cCI6MTYxODE0OTIzNX0.QZ6-f7vKD99j9sVEOutNksNkr22pgkWIbn_TVbl4qLo",
										"description": "TOken can be found in update",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profile_picture",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Pictures/Camera Roll/WIN_20200915_16_05_42_Pro.jpg"
										},
										{
											"key": "is_admin",
											"value": "true",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/user/update"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "ETag",
									"value": "W/\"129-KGSvldWs1grS0AxxroLBhWSdhhw\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:58:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_admin\": true,\n    \"_id\": \"6072d4cb73d73e2064cb4c92\",\n    \"email\": \"testuser@gmail.com\",\n    \"name\": \"Test User\",\n    \"bio\": \"Biology\",\n    \"phone\": \"123456789\",\n    \"password\": \"$2b$10$q/MPDd2tpFk5Zygc3fqIxeem1vBkVV9b7jHhq00XKB.HzJefLB4b6\",\n    \"profile_picture\": \"\\\\public\\\\pp\\\\1618138698296 -- WIN_20200915_16_05_42_Pro.jpg\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{host}}/user/delete"
					},
					"response": [
						{
							"name": "Successful deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{JWT}}",
										"type": "text"
									}
								],
								"url": "localhost:3000/user/delete"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "ETag",
									"value": "W/\"129-KGSvldWs1grS0AxxroLBhWSdhhw\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 11:04:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"is_admin\": true,\n    \"_id\": \"6072d4cb73d73e2064cb4c92\",\n    \"email\": \"testuser@gmail.com\",\n    \"name\": \"Test User\",\n    \"bio\": \"Biology\",\n    \"phone\": \"123456789\",\n    \"password\": \"$2b$10$q/MPDd2tpFk5Zygc3fqIxeem1vBkVV9b7jHhq00XKB.HzJefLB4b6\",\n    \"profile_picture\": \"\\\\public\\\\pp\\\\1618138698296 -- WIN_20200915_16_05_42_Pro.jpg\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Get new access token using refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0ODQxNTMsImV4cCI6MTYxODQ4Nzc1M30.FdsS_nsUehPNgaUJyKURRbSR44c66gMg10Ch78KaO9g",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDg5MDNlYjE5MGZhNjA4OTAyMzkwZTIiLCJpYXQiOjE2MjU3NDg5MTEsImV4cCI6MTYyODM0MDkxMX0.xi97e313_5JOw-3cUFZUOU5JMxwhbj1SATDMrq3Qf3Q\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/user/token-refresh",
						"description": "# Refresh your token here\nGet new access token using a refresh token"
					},
					"response": [
						{
							"name": "Get new access token using refresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0ODQxNTMsImV4cCI6MTYxODQ4Nzc1M30.FdsS_nsUehPNgaUJyKURRbSR44c66gMg10Ch78KaO9g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0ODQxNTMsImV4cCI6MTYxODUyMDE1M30.bnaUdEJJGgyjcYHO_sFD0JkMS5TmFXYBrOm1amm2Nyo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/user/token-refresh"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "190"
								},
								{
									"key": "ETag",
									"value": "W/\"be-jN4UTt/jN+zCSHz+fDKWaX5NMKg\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 14:18:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0OTYzMTksImV4cCI6MTYxODQ5OTkxOX0.wOSwyFTTyGa3_jDyHexoB8eTY8GkVFPpohQBu8VZ7kI\"\n}"
						}
					]
				},
				{
					"name": "Sigin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body have phone\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body have email\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"testuser@gmail.com\",\r\n    \"password\":\"test12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/user/signin",
						"description": "# Note\nBoth access and refresh tokens can be found from here"
					},
					"response": [
						{
							"name": "Successfully signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"testuser@gmail.com\",\r\n    \"password\":\"test12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/user/signin"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "233"
								},
								{
									"key": "ETag",
									"value": "W/\"e9-tTlkWD3oahwHhDg6Jh39URJMeVE\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:53:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZDRjYjczZDczZTIwNjRjYjRjOTIiLCJpYXQiOjE2MTgxMzg0MzUsImV4cCI6MTYxODE0OTIzNX0.QZ6-f7vKD99j9sVEOutNksNkr22pgkWIbn_TVbl4qLo\",\n    \"email\": \"testuser@gmail.com\",\n    \"phone\": \"123456789\"\n}"
						},
						{
							"name": "Sigin Failure",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"testuser@gmail.com\",\r\n    \"password\":\"test1234as5\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/user/signin"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "46"
								},
								{
									"key": "ETag",
									"value": "W/\"2e-hnCNHJQ75HzCGMdPaHBDCT0XAzo\""
								},
								{
									"key": "Date",
									"value": "Sun, 11 Apr 2021 10:55:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Username or password doesnot match\"\n}"
						}
					]
				},
				{
					"name": "Follow someone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"status valid check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ok\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/user/friendship/:userId/follow",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"friendship",
								":userId",
								"follow"
							],
							"variable": [
								{
									"key": "userId",
									"value": "60ab66259b15db3d5716e0dd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "unfollow someone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"status valid check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ok\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/user/friendship/:userID/unfollow",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"friendship",
								":userID",
								"unfollow"
							],
							"variable": [
								{
									"key": "userID",
									"value": "60ab66259b15db3d5716e0dd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Have status 200\",function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/search?name=60ab66259b15db3d5716e0dd&ulimit=2&uskip=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "60ab66259b15db3d5716e0dd"
								},
								{
									"key": "ulimit",
									"value": "2"
								},
								{
									"key": "uskip",
									"value": "0"
								}
							]
						},
						"description": "## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| ulimit | Number of posts in the response |10|\n| uskip | Skip the number of post specified |0|\n| sort_by | Specify the field you want to sort by |name|\n| order | ASC for ASCENDING any other value means DESCENDING |DESCENDING SORT|"
					},
					"response": []
				},
				{
					"name": "Get a user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lets test response time\",()=>{\r",
									"    pm.expect( pm.response.responseTime ).to.be.below(2000)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/:userid/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								":userid",
								"profile"
							],
							"variable": [
								{
									"key": "userid",
									"value": "608ed6155e3e994e00ef15e0",
									"description": "_id value of user ou want to get profile of"
								}
							]
						},
						"description": "Request URL \n> {{host}}/user/:user_id/profile\n\nRequest Parameters\n\n|key|value|default|\n|-------|------|------|\n| followings_limit | Number | 20 |\n| followings_skip | Number | 0 |\n| followers_limit | Number | 20 |\n| followers_skip | Number | 0 |"
					},
					"response": []
				},
				{
					"name": "user profile by token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Getting User Profile From Token\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Email field is there\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Phone field is there\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check If admin True or False\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"is_admin\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/user/token-user"
					},
					"response": []
				},
				{
					"name": "Get Followers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/:userId/profile/followers",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								":userId",
								"profile",
								"followers"
							],
							"variable": [
								{
									"key": "userId",
									"value": "608ed6155e3e994e00ef15e0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3 SEC\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/:userId/profile/followings",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								":userId",
								"profile",
								"followings"
							],
							"variable": [
								{
									"key": "userId",
									"value": "6090ee7a5a27f23eba53b26c"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FriendShip Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/user/:userId/friendship/status",
							"host": [
								"{{host}}"
							],
							"path": [
								"user",
								":userId",
								"friendship",
								"status"
							],
							"variable": [
								{
									"key": "userId",
									"value": "608ed6155e3e994e00ef15e0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Create post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"Competition should be null\",function(){\r",
									"    pm.expect(pm.response.json().competition).to.be.null\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "From Refrencing to embedding saves memeory",
									"type": "text"
								},
								{
									"key": "media",
									"type": "file",
									"src": "/home/n1/Downloads/60f2eb881d4dde3e9ec5cbbf.mp4"
								},
								{
									"key": "thumbnail",
									"description": "If not proided server will create itself",
									"type": "file",
									"src": []
								},
								{
									"key": "thumbnail_GIF",
									"description": "If not proided server will create GIF itself",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "PU",
									"description": "Default FR\n\nPR => private \nPU => public\nFR => friends\nHI => hidden or deleted",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/post/create"
					},
					"response": [
						{
							"name": "Post created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0OTYzMTksImV4cCI6MTYxODQ5OTkxOX0.wOSwyFTTyGa3_jDyHexoB8eTY8GkVFPpohQBu8VZ7kI",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "This is the 1st post by Nirjal. A dev Test",
											"type": "text"
										},
										{
											"key": "fileType",
											"value": "VIDEO",
											"type": "text"
										},
										{
											"key": "media",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Videos/sindhu.mp4"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/post/create"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "260"
								},
								{
									"key": "ETag",
									"value": "W/\"104-ICRFiFV2W8bhEp756g5Wp+VnsSY\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 14:48:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"views\": 0,\n    \"_id\": \"607852398d79cd21280185b7\",\n    \"description\": \"This is the 1st post by Nirjal. A dev Test\",\n    \"user\": \"60781b8d8c342a208c974105\",\n    \"media\": \"607852388d79cd21280185b6\",\n    \"created_at\": \"2021-04-15T14:48:25.024Z\",\n    \"updated_at\": \"2021-04-15T14:48:25.024Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Create post, add in competition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"Competition should be null\",function(){\r",
									"    pm.expect(pm.response.json().competition).to.not.be.null;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "competition_id",
									"value": "60c9e6f58faaef85c14ae65a",
									"description": "Competition id will resilt in 404 if no competition found",
									"type": "text"
								},
								{
									"key": "description",
									"value": "#aws uploading try ",
									"type": "text"
								},
								{
									"key": "media",
									"type": "file",
									"src": "/home/n1/Downloads/60f2eb881d4dde3e9ec5cbbf.mp4"
								},
								{
									"key": "thumbnail",
									"description": "If not proided server will create itself",
									"type": "file",
									"src": []
								},
								{
									"key": "thumbnail_GIF",
									"description": "If not proided server will create GIF itself",
									"type": "file",
									"src": []
								},
								{
									"key": "type",
									"value": "PR",
									"description": "Default FR\n\nPR => private \nPU => public\nFR => friends\nHI => hidden or deleted",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/post/create"
					},
					"response": [
						{
							"name": "Post created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg0OTYzMTksImV4cCI6MTYxODQ5OTkxOX0.wOSwyFTTyGa3_jDyHexoB8eTY8GkVFPpohQBu8VZ7kI",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "This is the 1st post by Nirjal. A dev Test",
											"type": "text"
										},
										{
											"key": "fileType",
											"value": "VIDEO",
											"type": "text"
										},
										{
											"key": "media",
											"type": "file",
											"src": "/C:/Users/alphawolfnirjal/Videos/sindhu.mp4"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/post/create"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "260"
								},
								{
									"key": "ETag",
									"value": "W/\"104-ICRFiFV2W8bhEp756g5Wp+VnsSY\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 14:48:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"views\": 0,\n    \"_id\": \"607852398d79cd21280185b7\",\n    \"description\": \"This is the 1st post by Nirjal. A dev Test\",\n    \"user\": \"60781b8d8c342a208c974105\",\n    \"media\": \"607852388d79cd21280185b6\",\n    \"created_at\": \"2021-04-15T14:48:25.024Z\",\n    \"updated_at\": \"2021-04-15T14:48:25.024Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/post/all?plimit=10&pskip=0&user_id=608ed6155e3e994e00ef15e0&comp_id&order=DESC&sort_by=created_at",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								"all"
							],
							"query": [
								{
									"key": "plimit",
									"value": "10",
									"description": "default 10"
								},
								{
									"key": "pskip",
									"value": "0",
									"description": "0"
								},
								{
									"key": "user_id",
									"value": "608ed6155e3e994e00ef15e0",
									"description": "Any userid"
								},
								{
									"key": "comp_id",
									"value": null,
									"description": "Any competition"
								},
								{
									"key": "order",
									"value": "DESC",
									"description": "DESC or ASC\ndefault DESC"
								},
								{
									"key": "sort_by",
									"value": "created_at",
									"description": "Faste with these fields\nTypes\nlikes\ncreated_at\nupdated_at"
								}
							]
						},
						"description": "## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| user_id | Get all Posts for that user ||\n| comp_id | Get videos for a competition | |\n| q | Search for description on post||\n| plimit | Number of posts in the response |10|\n| pskip | Skip the number of post specified |0|\n| sort_by | Specify the field you want to sort by |views|\n| order | ASC for ASCENDING any other value means DESCENDING |DESCENDING SORT|"
					},
					"response": [
						{
							"name": "Get all posts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "localhost:3000/post/all"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "681"
								},
								{
									"key": "ETag",
									"value": "W/\"2a9-4gekDd3ld/Yy7RWhtUq3Zf8d/8I\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 15:51:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"views\": 0,\n        \"_id\": \"60785a2a1a1a362ae06ee759\",\n        \"description\": \"This is the 1st post by Nirjal. A dev Test\",\n        \"user\": {\n            \"is_admin\": false,\n            \"_id\": \"60781b8d8c342a208c974105\",\n            \"email\": \"helloworld@gmail.commmm\",\n            \"name\": \"Test User\",\n            \"bio\": \"Biology\",\n            \"phone\": \"1111111111111\",\n            \"profile_picture\": \"\\\\public\\\\pp\\\\1618485234567 -- 71SnRYHv-CL._AC_SY450_.jpg\",\n            \"created_at\": \"2021-04-15T10:55:09.804Z\",\n            \"updated_at\": \"2021-04-15T11:13:54.772Z\",\n            \"__v\": 0\n        },\n        \"media\": {\n            \"_id\": \"60785a231a1a362ae06ee758\",\n            \"path\": \"public\\\\post\\\\videos\\\\1618500127949 -- sindhu.mp4\",\n            \"filetype\": \"VIDEO\",\n            \"mimetype\": \"video/mp4\",\n            \"encoding\": \"7bit\",\n            \"__v\": 0\n        },\n        \"created_at\": \"2021-04-15T15:22:18.325Z\",\n        \"updated_at\": \"2021-04-15T15:22:18.325Z\",\n        \"__v\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "By hashtag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"   \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/post/hashtag/tag/:hashtag",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								"hashtag",
								"tag",
								":hashtag"
							],
							"variable": [
								{
									"key": "hashtag",
									"value": "aws"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get post by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"ID required\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postId",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60efbef8deeeca077832c811"
								}
							]
						},
						"description": "## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| climit | Number of comments in the response for that post |10|\n| cskip | Skip the number of comments for the post specified |0|\n| llimit | Number of likes in the response for that post |10|\n| lskip | Skip the likes of post specified |0|"
					},
					"response": [
						{
							"name": "Get post by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "localhost:3000/post/60785a2a1a1a362ae06ee759"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "679"
								},
								{
									"key": "ETag",
									"value": "W/\"2a7-YC6b6fSTS+NMvhUr9UUUqor8WQM\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 16:11:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"views\": 0,\n    \"_id\": \"60785a2a1a1a362ae06ee759\",\n    \"description\": \"This is the 1st post by Nirjal. A dev Test\",\n    \"user\": {\n        \"is_admin\": false,\n        \"_id\": \"60781b8d8c342a208c974105\",\n        \"email\": \"helloworld@gmail.commmm\",\n        \"name\": \"Test User\",\n        \"bio\": \"Biology\",\n        \"phone\": \"1111111111111\",\n        \"profile_picture\": \"\\\\public\\\\pp\\\\1618485234567 -- 71SnRYHv-CL._AC_SY450_.jpg\",\n        \"created_at\": \"2021-04-15T10:55:09.804Z\",\n        \"updated_at\": \"2021-04-15T11:13:54.772Z\",\n        \"__v\": 0\n    },\n    \"media\": {\n        \"_id\": \"60785a231a1a362ae06ee758\",\n        \"path\": \"public\\\\post\\\\videos\\\\1618500127949 -- sindhu.mp4\",\n        \"filetype\": \"VIDEO\",\n        \"mimetype\": \"video/mp4\",\n        \"encoding\": \"7bit\",\n        \"__v\": 0\n    },\n    \"created_at\": \"2021-04-15T15:22:18.325Z\",\n    \"updated_at\": \"2021-04-15T15:22:18.325Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Video",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1.5 sec\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
									"});\r",
									"pm.test(\"ID required\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\":\"Update try aws\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/post/:postID",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postID"
							],
							"variable": [
								{
									"key": "postID",
									"value": "60e7f9814a0e3602db5223c6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updaate Video",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg1MDMyNDYsImV4cCI6MTYxODUwNjg0Nn0.In_MnBO8RunYPa-Ik92zp2u0tNmFQfhQU08whgVv2a0",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\":\"The description is updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/post/60785a2a1a1a362ae06ee759"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "244"
								},
								{
									"key": "ETag",
									"value": "W/\"f4-7NOPKA3L7GG1JYXhzbnQZPGgpFc\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 16:44:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"views\": 0,\n    \"_id\": \"60785a2a1a1a362ae06ee759\",\n    \"description\": \"The description is updated\",\n    \"user\": \"60781b8d8c342a208c974105\",\n    \"media\": \"60785a231a1a362ae06ee758\",\n    \"created_at\": \"2021-04-15T15:22:18.325Z\",\n    \"updated_at\": \"2021-04-15T16:44:11.419Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Comment a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"ID required\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									"pm.test(\"Response time is less than 1.5 sec\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"Nice game\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/post/:postId/comment",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId",
								"comment"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60efbef8deeeca077832c811"
								}
							]
						}
					},
					"response": [
						{
							"name": "Create a comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZmU4MGNkYmQ0NjFiMTQ4MjA2OWIiLCJpYXQiOjE2MTk1MTYwODAsImV4cCI6MTYxOTUxOTY4MH0.8-6sCHUg29oDXrRrVcVNYKBBFQmKDspe455JXYCqFGo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"body\":\"Wow sych an amazign view\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/post/6078765d417db617d03fc72c/comment"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "410"
								},
								{
									"key": "ETag",
									"value": "W/\"19a-O7WcoWeyUEFyn3Zkw+4mT0WsFA0\""
								},
								{
									"key": "Date",
									"value": "Tue, 27 Apr 2021 09:39:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"6087dbd762401f23f8f5a050\",\n    \"user\": {\n        \"is_admin\": false,\n        \"_id\": \"6072fe80cdbd461b1482069b\",\n        \"email\": \"testuser@gmail.com\",\n        \"name\": \"Test User\",\n        \"bio\": \"Biology\",\n        \"phone\": \"123456789\",\n        \"profile_picture\": null,\n        \"created_at\": \"2021-04-11T13:49:52.773Z\",\n        \"updated_at\": \"2021-04-12T13:49:30.983Z\",\n        \"__v\": 0\n    },\n    \"body\": \"Wow sych an amazign view\",\n    \"created_at\": \"2021-04-27T09:39:35.641Z\",\n    \"updated_at\": \"2021-04-27T09:39:35.641Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Delete a Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1.5 sec\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
									"});\r",
									"pm.test(\"Delete a post\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postId",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60e7f9814a0e3602db5223c6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Succesful deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDc4MWI4ZDhjMzQyYTIwOGM5NzQxMDUiLCJpYXQiOjE2MTg1MDMyNDYsImV4cCI6MTYxODUwNjg0Nn0.In_MnBO8RunYPa-Ik92zp2u0tNmFQfhQU08whgVv2a0",
										"type": "text"
									}
								],
								"url": "localhost:3000/post/60785a2a1a1a362ae06ee759"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "244"
								},
								{
									"key": "ETag",
									"value": "W/\"f4-7NOPKA3L7GG1JYXhzbnQZPGgpFc\""
								},
								{
									"key": "Date",
									"value": "Thu, 15 Apr 2021 16:46:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"views\": 0,\n    \"_id\": \"60785a2a1a1a362ae06ee759\",\n    \"description\": \"The description is updated\",\n    \"user\": \"60781b8d8c342a208c974105\",\n    \"media\": \"60785a231a1a362ae06ee758\",\n    \"created_at\": \"2021-04-15T15:22:18.325Z\",\n    \"updated_at\": \"2021-04-15T16:44:11.419Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Delete comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1.5 sec\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
									"});\r",
									"pm.test(\"Delete a post\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deleted\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postId/delete-comment/comment/:commentID",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId",
								"delete-comment",
								"comment",
								":commentID"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60e7f9814a0e3602db5223c6"
								},
								{
									"key": "commentID",
									"value": "60e87e1c291184d0e4582b2c"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete a comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZmU4MGNkYmQ0NjFiMTQ4MjA2OWIiLCJpYXQiOjE2MTk1MTYwODAsImV4cCI6MTYxOTUxOTY4MH0.8-6sCHUg29oDXrRrVcVNYKBBFQmKDspe455JXYCqFGo",
										"type": "text"
									}
								],
								"url": "localhost:3000/post/6078765d417db617d03fc72c/delete-comment/comment/6087dbd762401f23f8f5a050"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "203"
								},
								{
									"key": "ETag",
									"value": "W/\"cb-E0IMremh/ep05JjkOmhhZHEefuo\""
								},
								{
									"key": "Date",
									"value": "Tue, 27 Apr 2021 09:50:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"6087dbd762401f23f8f5a050\",\n    \"user\": \"6072fe80cdbd461b1482069b\",\n    \"body\": \"(comments in nepali) Kya dammi thau k\",\n    \"created_at\": \"2021-04-27T09:39:35.641Z\",\n    \"updated_at\": \"2021-04-27T09:47:49.183Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Unlike a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Unlike a post\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Post is unliked\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postId/unlike",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId",
								"unlike"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60e7f9814a0e3602db5223c6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"like a post\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The post is liked\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postID/like",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postID",
								"like"
							],
							"variable": [
								{
									"key": "postID",
									"value": "60e7f9814a0e3602db5223c6"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unlike / Deleye alike",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZmU4MGNkYmQ0NjFiMTQ4MjA2OWIiLCJpYXQiOjE2MTk1MTYwODAsImV4cCI6MTYxOTUxOTY4MH0.8-6sCHUg29oDXrRrVcVNYKBBFQmKDspe455JXYCqFGo",
										"type": "text"
									}
								],
								"url": "localhost:3000/post/6078765d417db617d03fc72c/like"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "31"
								},
								{
									"key": "ETag",
									"value": "W/\"1f-UUqVO8JfHnlxM2kkKQG1gHgnyKY\""
								},
								{
									"key": "Date",
									"value": "Tue, 27 Apr 2021 09:52:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": \"The post is liked\"\n}"
						}
					]
				},
				{
					"name": "Get famous hashtags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"   \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/post/hashtags?hlimit=20&hskip=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								"hashtags"
							],
							"query": [
								{
									"key": "hlimit",
									"value": "20"
								},
								{
									"key": "hskip",
									"value": "0"
								}
							]
						},
						"description": "> ###### Default sort by most videos for a tag\n\n## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| hlimit | Number of posts in the response |10|\n| hskip | Skip the number of post specified |0|"
					},
					"response": []
				},
				{
					"name": "Increase 1 view",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Increse 1 view\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"increased\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/post/:postId/inc/view",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								":postId",
								"inc",
								"view"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60e7f9814a0e3602db5223c6"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Update comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"(comments in nepali) Kya dammi thau k\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/comment/:commentId",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60eaf8c4913b4dbc3f6a15b3"
								}
							]
						}
					},
					"response": [
						{
							"name": "Update comment",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDcyZmU4MGNkYmQ0NjFiMTQ4MjA2OWIiLCJpYXQiOjE2MTk1MTYwODAsImV4cCI6MTYxOTUxOTY4MH0.8-6sCHUg29oDXrRrVcVNYKBBFQmKDspe455JXYCqFGo",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"body\":\"(comments in nepali) Kya dammi thau k\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "localhost:3000/comment/6087dbd762401f23f8f5a050"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "203"
								},
								{
									"key": "ETag",
									"value": "W/\"cb-E0IMremh/ep05JjkOmhhZHEefuo\""
								},
								{
									"key": "Date",
									"value": "Tue, 27 Apr 2021 09:47:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"6087dbd762401f23f8f5a050\",\n    \"user\": \"6072fe80cdbd461b1482069b\",\n    \"body\": \"(comments in nepali) Kya dammi thau k\",\n    \"created_at\": \"2021-04-27T09:39:35.641Z\",\n    \"updated_at\": \"2021-04-27T09:47:49.183Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Reply to a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"chup gandu\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/comment/reply/:commentId",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								"reply",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60f16097be16fe24152ec2c9",
									"description": "Messi kai bhalu di maria lai kalu bhaneko xa yesma"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Reply",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/comment/reply/:replyId",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								"reply",
								":replyId"
							],
							"variable": [
								{
									"key": "replyId",
									"value": "60eaf8c4913b4dbc3f6a15b3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Like a comment or reply",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/comment/:commentId/like",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								":commentId",
								"like"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60f161fef14c7b24a4a78493"
								}
							]
						},
						"description": "Both **comment and reply are same**. So this route should work for both"
					},
					"response": []
				},
				{
					"name": "Unlike a comment or reply",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/comment/:commentId/unlike",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								":commentId",
								"unlike"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60f15fe837d9661732f34115"
								}
							]
						},
						"description": "Both **comment and reply are same**. So this route should work for both"
					},
					"response": []
				},
				{
					"name": "Get Replies to a comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/comment/:commentId/replies?rlimit=10&rskip=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								":commentId",
								"replies"
							],
							"query": [
								{
									"key": "rlimit",
									"value": "10"
								},
								{
									"key": "rskip",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60f16097be16fe24152ec2c9"
								}
							]
						},
						"description": "Both **comment and reply are same**. So this route should work for both"
					},
					"response": []
				},
				{
					"name": "Get likes to a comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/comment/:commentId/likes?llimit=10&lskip=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"comment",
								":commentId",
								"likes"
							],
							"query": [
								{
									"key": "llimit",
									"value": "10"
								},
								{
									"key": "lskip",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "60f161fef14c7b24a4a78493"
								}
							]
						},
						"description": "Both **comment and reply are same**. So this route should work for both"
					},
					"response": []
				}
			]
		},
		{
			"name": "Competition",
			"item": [
				{
					"name": "Create a competition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "New competition",
									"description": "Title of competition",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a new competition. It is a  test for file upload. Lets see how it works",
									"description": "Description of competition",
									"type": "text"
								},
								{
									"key": "startDate",
									"value": "2021-7-15",
									"type": "text"
								},
								{
									"key": "endDate",
									"value": "2021-7-20",
									"type": "text"
								},
								{
									"key": "categories[0]",
									"value": "new",
									"type": "text"
								},
								{
									"key": "categories[1]",
									"value": "competition",
									"type": "text"
								},
								{
									"key": "categories[2]",
									"value": "file",
									"type": "text"
								},
								{
									"key": "categories[3]",
									"value": "upload",
									"type": "text"
								},
								{
									"key": "main_photo",
									"type": "file",
									"src": "/C:/Users/ppuda/Downloads/received_160043772859895.jpeg"
								},
								{
									"key": "cover_photo",
									"type": "file",
									"src": "/C:/Users/ppuda/Downloads/received_160043772859895.jpeg"
								}
							]
						},
						"url": "{{host}}/competition/create"
					},
					"response": [
						{
							"name": "Create a competition",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"startDate\":\"2021-05-12\",\r\n    \"endDate\":\"2021-12-01\",\r\n    \"title\":\"1st competition [Dev Test]\",\r\n    \"description\":\"This is a first compedition build and this is a dev test\",\r\n    \"categories\":[\"DEV TEST\",\"1st comp\",\"startup\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/competition/create"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "606"
								},
								{
									"key": "ETag",
									"value": "W/\"25e-ENK47ctCIPcYJUoRg2Kcyz64h1w\""
								},
								{
									"key": "Date",
									"value": "Mon, 03 May 2021 08:38:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"posts\": [],\n    \"categories\": [\n        \"DEV TEST\",\n        \"1st comp\",\n        \"startup\"\n    ],\n    \"admins\": [\n        {\n            \"is_admin\": true,\n            \"is_merchant\": false,\n            \"_id\": \"608903eb190fa608902390e2\",\n            \"email\": \"testuser@gmail.com\",\n            \"name\": \"Test User\",\n            \"bio\": \"Biology\",\n            \"phone\": \"123456789\",\n            \"profile_picture\": null,\n            \"created_at\": \"2021-04-28T06:42:51.932Z\",\n            \"updated_at\": \"2021-04-28T06:45:58.168Z\",\n            \"__v\": 0\n        }\n    ],\n    \"moderators\": [],\n    \"editors\": [],\n    \"_id\": \"608fb687df26e52bb0a1bae4\",\n    \"startDate\": \"2021-05-12T00:00:00.000Z\",\n    \"endDate\": \"2021-12-01T00:00:00.000Z\",\n    \"title\": \"1st competition [Dev Test]\",\n    \"description\": \"This is a first compedition build and this is a dev test\",\n    \"sponsors\": [],\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Get all compeditions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{host}}/competition/all",
						"description": "## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| climit | Number of posts in the response |10|\n| cskip | Skip the number of post specified |0|\n| sort_by | Specify the field you want to sort by |title|\n| order | ASC for ASCENDING any other value means DESCENDING |DESCENDING SORT|\n| title | Search by title |  |"
					},
					"response": [
						{
							"name": "Get all compeditions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{host}}/competition/all"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "369"
								},
								{
									"key": "ETag",
									"value": "W/\"171-xuK6hdily1TV0GQH8YocDMg6U8s\""
								},
								{
									"key": "Date",
									"value": "Mon, 03 May 2021 08:43:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"608fb687df26e52bb0a1bae4\",\n        \"posts\": [],\n        \"categories\": [\n            \"DEV TEST\",\n            \"1st comp\",\n            \"startup\"\n        ],\n        \"admins\": [\n            \"608903eb190fa608902390e2\"\n        ],\n        \"moderators\": [],\n        \"editors\": [],\n        \"startDate\": \"2021-05-12T00:00:00.000Z\",\n        \"endDate\": \"2021-12-01T00:00:00.000Z\",\n        \"title\": \"1st competition [Dev Test]\",\n        \"description\": \"This is a first compedition build and this is a dev test\",\n        \"sponsors\": [],\n        \"__v\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "Get competition by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body have _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:compId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60eb0d26913b4dbc3f6a15be",
									"description": "COMPETITION ko _id value"
								}
							]
						},
						"description": "## All query parameters\n|key | value |Default Value | \n|----------|---------|------|\n| plimit | Number of posts in the response for that competition |10|\n| pskip | Skip the number of posts for the competition specified |0|"
					},
					"response": []
				},
				{
					"name": "Get all posts for a competition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/post/all?comp_id=60eb0d26913b4dbc3f6a15be",
							"host": [
								"{{host}}"
							],
							"path": [
								"post",
								"all"
							],
							"query": [
								{
									"key": "comp_id",
									"value": "60eb0d26913b4dbc3f6a15be"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Competition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb1550913b4dbc3f6a15cb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Compedition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "main_photo",
									"type": "file",
									"src": "/C:/Users/ppuda/Downloads/received_160043772859895.jpeg"
								},
								{
									"key": "cover_photo",
									"type": "file",
									"src": "/C:/Users/ppuda/Downloads/received_160043772859895.jpeg"
								}
							]
						},
						"url": {
							"raw": "{{host}}/competition/:compId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60eb1584913b4dbc3f6a15cc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user as a moderator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully added user\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:compId/ADD/MODERATOR/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"ADD",
								"MODERATOR",
								":userId"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60eb0eac913b4dbc3f6a15bf"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user as a moderator",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully removed user\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId/REMOVE/MODERATOR/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"REMOVE",
								"MODERATOR",
								":userId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user as an admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully added user as admin\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId/ADD/ADMIN/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"ADD",
								"ADMIN",
								":userId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user as an admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully removed user as admin\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId/REMOVE/ADMIN/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"REMOVE",
								"ADMIN",
								":userId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user as an Editor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully added user as editor\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId/ADD/EDITOR/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"ADD",
								"EDITOR",
								":userId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user as a Editor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sucessfully removed user as editor\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:competitionId/REMOVE/EDITOR/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"REMOVE",
								"EDITOR",
								":userId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a post from a competition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/competition/:compId/remove-post/:postId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"remove-post",
								":postId"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60eb15c0913b4dbc3f6a15cd",
									"description": "Competition _id"
								},
								{
									"key": "postId",
									"value": "60eb15f7913b4dbc3f6a15ce",
									"description": "Post _id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Sponser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sponser added \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"companyID\":\"60903f29b1d4500438efe98b\",\r\n    \"sponser_type\":\"Technical Support\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:competitionId/add/sponser",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"add",
								"sponser"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Sponser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Sponser added \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sponserID\":\"60c9e7138faaef85c14ae65b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:competitionId/remove/sponser",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"remove",
								"sponser"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update sponser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Sponser updated by new id \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sponser_type\":\"2nd etdchnical Partner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:competitionId/update/sponser/:sponserId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":competitionId",
								"update",
								"sponser",
								":sponserId"
							],
							"variable": [
								{
									"key": "competitionId",
									"value": "60eb10bb913b4dbc3f6a15c0"
								},
								{
									"key": "sponserId",
									"value": "60eb1354913b4dbc3f6a15c4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate Winners",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"name\":\"Most Likes\",\r\n        \"count\":3,\r\n        \"prizes\":[\r\n            \"Rs 3500\",\r\n            \"Rs 3000\",\r\n            \"Rs 2000\"\r\n        ]\r\n    },\r\n    {\r\n        \"name\":\"Most Comments\",\r\n        \"count\":2,\r\n        \"prizes\":[\r\n            \"Rs 500\",\r\n            \"Rs 100\"\r\n        ]\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:compId/calculate/winners",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"calculate",
								"winners"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60c9e6f58faaef85c14ae65a"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Awards for a competition",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Most Liked [updated]\",\n    \"description\":\"Winner le Mero asirbaad pauxau\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:compId/award/:awardId",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"award",
								":awardId"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60c9e6f58faaef85c14ae65a"
								},
								{
									"key": "awardId",
									"value": "60f44f1cf1d7e2176f8ddfd2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Award for a competition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Most Liked\",\n    \"description\":\"As the name suggests most liked means that the post in this comeptition with most likes wins TVS tyre signed cricket bat\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:compId/add/award",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"add",
								"award"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60c9e6f58faaef85c14ae65a"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Award for a competition",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Most Liked\",\n    \"description\":\"As the name suggests most liked means that the post in this comeptition with most likes wins TVS tyre signed cricket bat\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/competition/:compId/remove/award/:award_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"competition",
								":compId",
								"remove",
								"award",
								":award_id"
							],
							"variable": [
								{
									"key": "compId",
									"value": "60c9e6f58faaef85c14ae65a"
								},
								{
									"key": "award_id",
									"value": "60f44601caf9e40e90c4f4f8"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "Get all companies",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{host}}/company/all"
					},
					"response": []
				},
				{
					"name": "Create a company",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "MongoDb",
									"type": "text"
								},
								{
									"key": "contact",
									"value": "98412221121",
									"type": "text"
								},
								{
									"key": "company_image",
									"type": "file",
									"src": "/C:/Users/alphawolfnirjal/Pictures/MongoDB-logo.png"
								},
								{
									"key": "address",
									"value": "New York, New York, United States",
									"type": "text"
								},
								{
									"key": "links[0][name]",
									"value": "Facebook",
									"type": "text"
								},
								{
									"key": "links[0][url]",
									"value": "fb.com/MongoDB",
									"type": "text"
								},
								{
									"key": "links[1][name]",
									"value": "Insta",
									"type": "text"
								},
								{
									"key": "links[1][url]",
									"value": "instagram.com/monogdb",
									"type": "text"
								}
							]
						},
						"url": "{{host}}/company/create"
					},
					"response": []
				},
				{
					"name": "Delete a company",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/company/:companyId",
							"host": [
								"{{host}}"
							],
							"path": [
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "60e7028d7df1862abcffa366"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get companies by ID",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/company/:companyId",
							"host": [
								"{{host}}"
							],
							"path": [
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "60903f29b1d4500438efe98b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Company",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "company_image",
									"type": "file",
									"src": "/C:/Users/alphawolfnirjal/Pictures/MongoDB-logo.png"
								}
							]
						},
						"url": "{{host}}/company/60903f19b1d4500438efe988"
					},
					"response": []
				}
			]
		},
		{
			"name": "Report",
			"item": [
				{
					"name": "Report a post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\":\"Sexually Inappropiate\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/report/:postId",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "60f064d3bbc8953c783efa36"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By type",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host}}/report/type/Sexually Inappropiate"
					},
					"response": []
				},
				{
					"name": "All open requets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/report/is-open?rlimit=10&rskip=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								"is-open"
							],
							"query": [
								{
									"key": "rlimit",
									"value": "10"
								},
								{
									"key": "rskip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one report",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/report/:reportId",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								":reportId"
							],
							"variable": [
								{
									"key": "reportId",
									"value": "60aa01b8dde1f01f0007ae87",
									"description": "Report id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Close a report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/report/:reportId/close",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								":reportId",
								"close"
							],
							"variable": [
								{
									"key": "reportId",
									"value": "60e7031cd7598f16c8e6c25d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all requests from one time to another",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/report/time-stamps?startDate=05-22-2021&endDate=07-30-2021",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								"time-stamps"
							],
							"query": [
								{
									"key": "startDate",
									"value": "05-22-2021",
									"description": "Required"
								},
								{
									"key": "endDate",
									"value": "07-30-2021",
									"description": "Required"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Hide the post",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/report/:reportId/hide-post",
							"host": [
								"{{host}}"
							],
							"path": [
								"report",
								":reportId",
								"hide-post"
							],
							"variable": [
								{
									"key": "reportId",
									"value": "60e7031cd7598f16c8e6c25d"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Beta Features",
			"item": [
				{
					"name": "Get a followers for userId [NEW]",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/alpha/followers-for/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"alpha",
								"followers-for",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "608903eb190fa608902390e2",
									"description": "Test User ko"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a followings for userId [NEW] Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/alpha/followings-for/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"alpha",
								"followings-for",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "6090ee7a5a27f23eba53b26c",
									"description": "Dipesh dai"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followers with friend",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/alpha/followers/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"alpha",
								"followers",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "6090ee7a5a27f23eba53b26c",
									"description": "specify kosko followers"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Followings with friend",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/alpha/followings/:userId",
							"host": [
								"{{host}}"
							],
							"path": [
								"alpha",
								"followings",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "6090ee7a5a27f23eba53b26c",
									"description": "specify kosko followings"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Extra Routes",
			"item": [
				{
					"name": "Get count of objects in db",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{host}}/stats/db/count"
					},
					"response": []
				}
			]
		},
		{
			"name": "Firebase",
			"item": [
				{
					"name": "Add new token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\":\"fgjbU0fWSDGdLuU_FKqMAd:APA91bFXlohl5Apnsi2pehQ4wzNBpAbNXPmx75J1x4AEWF3xL0Go_AUGgKrEkLHjSiYV8bkzCLPXW_hZaIYe_UdnyJ0gJl8qF-3-9aEqpKEvulZeCAv5nf3aM5KK04ngn_o-mGQKU6t1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/fcm/create-token"
					},
					"response": []
				},
				{
					"name": "Send Notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Kamao Nepal\",\r\n    \"body\":\"Test User started following you\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/fcm/send-test",
						"description": "Sends notification to all the devices og loggedin user"
					},
					"response": []
				},
				{
					"name": "Delete Notification",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\":\"some existing token\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/fcm/delete-token"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{testuser 30 days}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:3001"
		},
		{
			"key": "testuser 30 days",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDg5MDNlYjE5MGZhNjA4OTAyMzkwZTIiLCJpYXQiOjE2MjU4MzI5MTksImV4cCI6MTYyODQyNDkxOX0.RmOC3eGuYexlwWsdNq6Z72hVVsVk-5saXJfMTzWObDk"
		},
		{
			"key": "prabesh 30 days",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDhlZDYxNTVlM2U5OTRlMDBlZjE1ZTAiLCJpYXQiOjE2MjU4MzI5NjAsImV4cCI6MTYyODQyNDk2MH0.elSJ0Z8U_ZF3dgV7uP-V2ma37Mrj1flNJCnJidVkVUE"
		},
		{
			"value": ""
		}
	]
}